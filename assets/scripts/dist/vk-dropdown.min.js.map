{"version":3,"sources":["vk-dropdown.js","fetch.js"],"names":["VkDropdown","element","arguments","length","undefined","userConfig","_classCallCheck","this","elements","document","querySelectorAll","i","el","querySelector","console","error","defaultConfig","classNames","activeState","focusState","highlightedState","openState","container","input","inputContainer","inputContainerAddIcon","inputContainerClear","list","listItem","inputContainerArrow","listItemName","listItemPhotoContainer","multi","hasAttribute","photoPreview","config","noPhoto","photoPreviewContainer","noPhotoPreview","selectedItem","noServerSearch","selectedItemRemove","selectedList","wasTap","_onKeyDown","bind","_onClick","_onMouseOver","_onTouchMove","_onTouchEnd","_createTemplates","selectedItems","xhr","addEventListener","_init","removeEventListener","_renderElement","_renderContainer","e","_keyDownActions","_this","target","hasActiveDropdown","classList","contains","listItems","children","item","_selectItem","hideDropdown","onEscapeKey","onDirectionKey","escapeKey","keyCode","downKey","onEnterKey","_unhighlightElement","newIndex","highlightedItem","_highlightElement","_scrollListToHighlightElement","directionInt","preventDefault","keyDownActions","_defineProperty","setTimeout","_searchItems","foundTarget","_clearSelect","_removeItem","_findAncestorByAttr","_unhighlightAll","itemHover","showDropdown","stopPropagation","add","scrollTop","currentItemBottom","offsetTop","offsetHeight","currentItemTop","currentScrollTop","listHeight","attr","parentElement","style","display","_getTemplate","appendChild","clear","_this2","globalClasses","createElement","className","arrow","clearButton","setAttribute","object","placeholder","id","name","innerHTML","photoContainer","photo","emptyItem","src","photoBlock","selectedItemName","listItemEmpty","removeBtn","addButton","inputContainerAdd","addButtonIcon","type","text","ru","split","en","join","ruBad","_getOtherKeyboardLayout","template","templates","_len","args","Array","_key","apply","_showSelectedListAddButton","_hideSelectedClearButton","_renderListItems","items","fromServer","fragment","createDocumentFragment","selectedIds","map","getAttribute","currentRenderedItems","currentRenderedCount","currentRenderedIds","push","user","indexOf","option","_this3","_renderListItemsEmpty","optionEmpty","objects","_this4","selectedObjects","forEach","selectedObject","_this5","presetItems","filter","obj","selectedId","cloneNode","value","removeAttribute","_renderPhotoPreview","_this6","q","itemsFiltered","person","index","toLowerCase","answer","namePart","qEn2ru","qEnBad2ru","qRu2en","_searchOnServer","$this","params","readyState","abort","XMLHttpRequest","open","setRequestHeader","onload","status","data","JSON","parse","response","onerror","send","userId","encodeURIComponent","stringify","_scrollListToTop","remove","_showInput","_hideInput","focus","_hideSelectedListAddButton","self","normalizeName","normalizeValue","test","TypeError","iteratorFor","iterator","next","String","support","iterable","shift","done","Headers","headers","Object","getOwnPropertyNames","append","isArray","header","oldValue","consumed","Promise","body","bodyUsed","reject","reader","resolve","result","promise","fileReaderReady","readAsArrayBuffer","blob","readAsText","FileReader","chars","view","Uint8Array","buf","fromCharCode","bufferClone","slice","buffer","byteLength","set","Body","_initBody","_bodyInit","Blob","_bodyBlob","formData","FormData","prototype","isPrototypeOf","_bodyFormData","searchParams","URLSearchParams","_bodyText","arrayBuffer","isDataView","_bodyArrayBuffer","toString","ArrayBuffer","isArrayBufferView","Error","rejected","readBlobAsArrayBuffer","then","readArrayBufferAsText","decode","json","methods","upcased","method","toUpperCase","options","credentials","url","normalizeMethod","referrer","mode","trim","form","bytes","decodeURIComponent","replace","rawHeaders","line","key","parts","bodyInit","ok","statusText","fetch","Symbol","viewClasses","isView","call","has","get","hasOwnProperty","keys","callback","thisArg","values","entries","Request","clone","Response","redirect","RangeError","redirectStatuses","location","request","init","parseHeaders","getAllResponseHeaders","responseURL","responseText","ontimeout","withCredentials","responseType","polyfill"],"mappings":"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","file":"vk-dropdown.min.js","sourcesContent":["class VkDropdown {\n    constructor(element = '[data-vk-dropdown]', userConfig) {\n        if (typeof element === 'string') {\n            const elements = document.querySelectorAll(element);\n            if (elements.length > 1) {\n                for (let i = 1; i < elements.length; i++) {\n                    const el = elements[i];\n                    new VkDropdown(el, userConfig);\n                }\n            }\n        }\n\n        this.element = typeof element === 'string' ? document.querySelector(element) : element;\n        if (!this.element) {\n            console.error('Passed element not found');\n            return;\n        }\n\n        const defaultConfig = {\n            classNames: {\n                activeState: 'is-active',\n                focusState: 'is-focused',\n                highlightedState: 'is-highlighted',\n                openState: 'is-open',\n                container: 'vk-dropdown',\n                input: 'vdd-input-container__input',\n                inputContainer: 'vdd-input-container',\n                inputContainerAdd: 'vdd-input-container__add',\n                inputContainerAddIcon: 'vdd-input-container__add-icon',\n                inputContainerArrow: 'vdd-input-container__arrow',\n                inputContainerClear: 'vdd-input-container__clear',\n                list: 'vdd-list',\n                listItem: 'vdd-list__item',\n                listItemEmpty: 'vdd-list__item-empty',\n                listItemName: 'vdd-list__name',\n                listItemPhotoContainer: 'vdd-list__photo',\n                photoPreview: 'vdd-photo-preview__item',\n                photoPreviewContainer: 'vdd-photo-preview__container',\n                selectedItem: 'vdd-input-container__selected-item',\n                selectedItemName: 'vdd-input-container__selected-item-name',\n                selectedItemRemove: 'vdd-input-container__selected-item-remove',\n                selectedList: 'vdd-input-container__selected'\n            },\n            multi: false,\n            noPhoto: false,\n            noPhotoPreview: false,\n            noServerSearch: false\n        };\n\n        this.config = Object.assign({}, defaultConfig, userConfig);\n        this.config.multi = this.config.multi || this.element.hasAttribute('data-multi');\n        this.config.noPhoto = this.config.noPhoto || this.element.hasAttribute('data-no-photo');\n        this.config.noPhotoPreview = this.config.noPhotoPreview || this.element.hasAttribute('data-no-photo-preview');\n        this.config.noServerSearch = this.config.noServerSearch || this.element.hasAttribute('data-no-server-search');\n\n        this.selectedItems = [];\n        this.xhr = null;\n        this.wasTap = true;\n\n        this._onKeyDown = this._onKeyDown.bind(this);\n        this._onClick = this._onClick.bind(this);\n        this._onMouseOver = this._onMouseOver.bind(this);\n        this._onTouchMove = this._onTouchMove.bind(this);\n        this._onTouchEnd = this._onTouchEnd.bind(this);\n\n        this._init();\n    }\n\n    _init() {\n        this._createTemplates();\n        this._renderElement();\n        this._renderContainer();\n        this._addEventListeners();\n    }\n\n    _addEventListeners() {\n        document.addEventListener('keydown', this._onKeyDown);\n        document.addEventListener('click', this._onClick);\n        document.addEventListener('mouseover', this._onMouseOver);\n        document.addEventListener('touchmove', this._onTouchMove);\n        document.addEventListener('touchend', this._onTouchEnd);\n    }\n\n    _removeEventListeners() {\n        document.removeEventListener('keydown', this._onKeyDown);\n        document.removeEventListener('click', this._onClick);\n        document.removeEventListener('mouseover', this._onMouseOver);\n        document.removeEventListener('touchmove', this._onTouchMove);\n        document.removeEventListener('touchend', this._onTouchEnd);\n    }\n\n    _onKeyDown(e) {\n        const target = e.target;\n        const hasActiveDropdown = this.list.classList.contains(this.config.classNames.activeState);\n\n        if (!hasActiveDropdown && !this.container.contains(target)) {\n            return;\n        }\n\n        const listItems = this.list.children;\n\n        const enterKey = 13;\n        const escapeKey = 27;\n        const upKey = 38;\n        const downKey = 40;\n\n        const onEnterKey = () => {\n            for (let i = 0; i < listItems.length; i++) {\n                const item = listItems[i];\n\n                if (item.classList.contains(this.config.classNames.highlightedState)) {\n                    this._selectItem(item);\n                    this.hideDropdown();\n                    return;\n                }\n            }\n        };\n\n        const onEscapeKey = () => {\n            if (hasActiveDropdown) {\n                this.hideDropdown();\n            }\n        };\n\n        const onDirectionKey = () => {\n            const directionInt = (e.keyCode === downKey ? 1 : -1);\n\n            let highlightedItem;\n            for (let i = 0; i < listItems.length; i++) {\n                const item = listItems[i];\n\n                if (item.classList.contains(this.config.classNames.highlightedState)) {\n                    this._unhighlightElement(item);\n\n                    let newIndex = i + directionInt;\n\n                    // if highlighted last item and key down, doing nothing\n                    if (newIndex >= listItems.length) {\n                        newIndex = i;\n                    }\n\n                    highlightedItem = listItems[newIndex];\n                }\n            }\n\n            if (!highlightedItem) {\n                highlightedItem = listItems[0];\n            }\n\n            this._highlightElement(highlightedItem);\n            this._scrollListToHighlightElement(highlightedItem, directionInt);\n\n            e.preventDefault();\n        };\n\n        const keyDownActions = {\n            [enterKey]: onEnterKey,\n            [escapeKey]: onEscapeKey,\n            [upKey]: onDirectionKey,\n            [downKey]: onDirectionKey,\n        };\n\n        if (keyDownActions[e.keyCode]) {\n            keyDownActions[e.keyCode]();\n        } else {\n            // no search if input non-multi and disabled (because already selected)\n            if (!this.config.multi && this.selectedItems.length) {\n                return;\n            }\n\n            // input value does not have time to fill without timeout\n            setTimeout(() => {\n                this._searchItems(this.input.value);\n            }, 0);\n        }\n    }\n\n    _onClick(e) {\n        const target = e.target;\n        const hasActiveDropdown = this.list.classList.contains(this.config.classNames.activeState);\n\n        if (this.container.contains(target)) {\n            let foundTarget;\n\n            if (target.hasAttribute('data-clear')) {\n                this._clearSelect();\n                return;\n            }\n\n            if (target.hasAttribute('data-remove')) {\n                this._removeItem(target);\n                return;\n            }\n\n            if (foundTarget = this._findAncestorByAttr(target, 'data-item')) {\n                this._selectItem(foundTarget);\n                this.hideDropdown();\n            }\n\n            if (!hasActiveDropdown) {\n                this.showDropdown();\n            }\n        } else {\n            if (hasActiveDropdown) {\n                this.hideDropdown();\n            }\n        }\n    }\n\n    _onMouseOver(e) {\n        const target = e.target;\n\n        if (target === this.list || this.list.contains(target)) {\n            this._unhighlightAll();\n\n            let itemHover;\n            if (itemHover = this._findAncestorByAttr(target, 'data-item')) {\n                this._highlightElement(itemHover);\n            }\n        }\n    }\n\n    _onTouchMove() {\n        if (this.wasTap === true) {\n            this.wasTap = false;\n        }\n    }\n\n    _onTouchEnd(e) {\n        const target = e.target || e.touches[0].target;\n        const hasActiveDropdown = this.list.classList.contains(this.config.classNames.activeState);\n\n        if (this.wasTap === true && this.container.contains(target)) {\n            if (!hasActiveDropdown) {\n                this.showDropdown();\n            }\n\n            e.stopPropagation();\n        } else {\n            if (hasActiveDropdown) {\n                this.hideDropdown();\n            }\n        }\n\n        this.wasTap = true;\n    }\n\n    _highlightElement(element) {\n        element.classList.add(this.config.classNames.highlightedState);\n    }\n\n    _unhighlightElement(element) {\n        element.classList.remove(this.config.classNames.highlightedState);\n    }\n\n    _unhighlightAll() {\n        const listItems = this.list.children;\n\n        for (let i = 0; i < listItems.length; i++) {\n            const item = listItems[i];\n\n            if (item.classList.contains(this.config.classNames.highlightedState)) {\n                this._unhighlightElement(item);\n            }\n        }\n    }\n\n    _scrollListToTop() {\n        this.list.scrollTop = 0;\n    }\n\n    _scrollListToHighlightElement(element, directionInt) {\n        const currentItemBottom = element.offsetTop + element.offsetHeight;\n        const currentItemTop = element.offsetTop;\n        const currentScrollTop = this.list.scrollTop;\n        const listHeight = this.list.offsetHeight;\n\n        // move scrollbar if highlighted not in view\n        if (directionInt > 0 && currentItemBottom > listHeight) {\n            this.list.scrollTop = currentItemBottom - listHeight;\n        } else if (directionInt < 0 && (listHeight + currentItemTop < listHeight + currentScrollTop)) {\n            this.list.scrollTop = currentItemTop;\n        }\n    }\n\n    _findAncestorByAttr(el, attr) {\n        let target = el;\n\n        while (target) {\n            if (target.hasAttribute(attr)) {\n                return target;\n            }\n\n            target = target.parentElement;\n        }\n\n        return null;\n    };\n\n    _clearSelect() {\n        this.selectedItems = [];\n        this._renderContainer();\n\n        const clear = this.inputContainer.querySelectorAll('[data-clear]')[0];\n        clear.style.display = 'none';\n\n        if (this.list.classList.contains(this.config.classNames.activeState)) {\n            this.input.focus();\n        }\n    }\n\n    _renderElement() {\n        const container = this._getTemplate('container');\n        const input = this._getTemplate('input');\n        const inputContainer = this._getTemplate('inputContainer');\n        const list = this._getTemplate('list');\n\n        this.container = container;\n        this.input = input;\n        this.inputContainer = inputContainer;\n        this.list = list;\n\n        if (this.config.multi) {\n            const selectedList = this._getTemplate('selectedList');\n            this.selectedList = selectedList;\n            inputContainer.appendChild(selectedList);\n        }\n\n        inputContainer.appendChild(input);\n        container.appendChild(inputContainer);\n        container.appendChild(list);\n\n        if (!this.config.noPhotoPreview) {\n            const photoPreviewContainer = this._getTemplate('photoPreviewContainer');\n            this.photoPreviewContainer = photoPreviewContainer;\n            container.appendChild(photoPreviewContainer);\n        }\n\n        this.element.appendChild(container);\n    }\n\n    _createTemplates() {\n        const globalClasses = this.config.classNames;\n        this.config.templates = {\n            container: () => {\n                const container = document.createElement('div');\n                container.className = globalClasses.container;\n\n                return container;\n            },\n            input: () => {\n                const input = document.createElement('input');\n                input.className = globalClasses.input;\n                input.type = 'text';\n                input.placeholder = 'Name...';\n\n                return input;\n            },\n            inputContainer: () => {\n                const container = document.createElement('div');\n                container.className = globalClasses.inputContainer;\n\n                const arrow = document.createElement('div');\n                arrow.className = globalClasses.inputContainerArrow;\n                container.appendChild(arrow);\n\n                if (this.config.multi) {\n\n                } else {\n                    const clearButton = document.createElement('div');\n                    clearButton.className = globalClasses.inputContainerClear;\n                    clearButton.style.display = 'none';\n                    clearButton.setAttribute('data-clear', '');\n                    container.appendChild(clearButton);\n                }\n\n                return container;\n            },\n            list: () => {\n                const list = document.createElement('div');\n                list.className = globalClasses.list;\n\n                return list;\n            },\n            listItem: (object) => {\n                const item = document.createElement('div');\n                item.className = globalClasses.listItem;\n                item.setAttribute('data-item', '');\n                item.setAttribute('data-id', object.id);\n\n                const name = document.createElement('div');\n                name.className = globalClasses.listItemName;\n                name.innerHTML = object.name;\n\n                if (!this.config.noPhoto) {\n                    const photo = document.createElement('img');\n                    photo.src = object.photo;\n\n                    const photoContainer = document.createElement('div');\n                    photoContainer.className = globalClasses.listItemPhotoContainer;\n\n                    photoContainer.appendChild(photo);\n                    item.appendChild(photoContainer);\n                }\n\n                item.appendChild(name);\n\n                return item;\n            },\n            listItemEmpty: () => {\n                const emptyItem = document.createElement('div');\n                emptyItem.className = globalClasses.listItemEmpty;\n                emptyItem.innerHTML = 'The user is not found';\n\n                return emptyItem;\n            },\n            photoPreview: (imgUrl) => {\n                const photoBlock = document.createElement('div');\n                photoBlock.className = globalClasses.photoPreview;\n\n                const photo = document.createElement('img');\n                photo.src = imgUrl;\n\n                photoBlock.appendChild(photo);\n\n                return photoBlock\n            },\n            photoPreviewContainer: () => {\n                const container = document.createElement('div');\n                container.className = globalClasses.photoPreviewContainer;\n\n                return container;\n            },\n            selectedItem: (object) => {\n                const item = document.createElement('div');\n                item.className = globalClasses.selectedItem;\n                item.setAttribute('data-id', object.id);\n\n                const name = document.createElement('div');\n                name.className = globalClasses.selectedItemName;\n                name.innerHTML = object.name;\n\n                const removeBtn = document.createElement('div');\n                removeBtn.className = globalClasses.selectedItemRemove;\n                removeBtn.setAttribute('data-remove', '');\n\n                item.appendChild(name);\n                item.appendChild(removeBtn);\n\n                return item;\n            },\n            selectedList: () => {\n                const list = document.createElement('div');\n                list.className = globalClasses.selectedList;\n\n                const addButton = document.createElement('div');\n                addButton.className = globalClasses.inputContainerAdd;\n                addButton.innerHTML = 'Add';\n                addButton.setAttribute('data-add', '');\n\n                const addButtonIcon = document.createElement('div');\n                addButtonIcon.className = globalClasses.inputContainerAddIcon;\n\n                addButton.appendChild(addButtonIcon);\n                list.appendChild(addButton);\n\n                return list;\n            }\n        };\n    }\n\n    _getOtherKeyboardLayout(text, type) {\n        if (!type) {\n            return text;\n        }\n\n        const ru = \"щ   ш  ч  ц  ю  я  ё  ж  ъ  ы  э  а б в г д е з и й к л м н о п р с т у ф х ь\".split(/ +/g);\n        const en = \"shh sh ch cz yu ya yo zh `` y' e` a b v g d e z i j k l m n o p r s t u f x `\".split(/ +/g);\n        const ruBad = \"o i x w . z \\\\ ; ] s ' f , d u l t p b q r k v y j g h c n e a [ m\".split(/ +/g);\n\n        switch (type) {\n            case 'ru2en':\n                for (let i = 0; i < ru.length; i++) {\n                    text = text.split(ru[i]).join(en[i]);\n                }\n\n                return text;\n\n            case 'en2ru':\n                for (let i = 0; i < ru.length; i++) {\n                    text = text.split(en[i]).join(ru[i]);\n                }\n\n                return text;\n\n            case 'enBad2ru':\n                for (let i = 0; i < ru.length; i++) {\n                    text = text.split(ruBad[i]).join(ru[i]);\n                }\n\n                return text;\n\n            case 'ruBad2en2ru':\n                for (let i = 0; i < ru.length; i++) {\n                    text = text.split(ru[i]).join(ruBad[i]);\n                }\n\n                return this._getOtherKeyboardLayout(text, 'en2ru');\n        }\n\n        return text;\n    }\n\n    _getTemplate(template, ...args) {\n        if (!template) {\n            return null;\n        }\n\n        const templates = this.config.templates;\n        return templates[template](...args);\n    }\n\n    _renderContainer() {\n        if (this.config.multi) {\n            if (this.selectedItems.length) {\n                this._showSelectedListAddButton();\n            }\n        } else {\n            if (this.selectedItems.length) {\n                this._showSelectedClearButton();\n            } else {\n                this._hideSelectedClearButton();\n            }\n        }\n\n        this._renderListItems(this.config.presetItems);\n        this._renderSelectedItems();\n    }\n\n    _renderListItems(items, fromServer) {\n        const fragment = document.createDocumentFragment();\n        const selectedIds = this.selectedItems.map((item) => +item.getAttribute('data-id'));\n\n        const currentRenderedItems = this.list.querySelectorAll('[data-item]');\n        let currentRenderedCount = currentRenderedItems.length;\n        let currentRenderedIds = [];\n\n        if (fromServer) {\n            for (let i = 0; i < currentRenderedCount; i++) {\n                const item = currentRenderedItems[i];\n                currentRenderedIds.push(+item.getAttribute('data-id'));\n            }\n        }\n\n        items.forEach((user) => {\n            // if local search and not in selected or\n            // server search and not in rendered\n            if ((!fromServer && !~selectedIds.indexOf(user.id)) || (fromServer && !~currentRenderedIds.indexOf(user.id))) {\n                const option = this._getTemplate('listItem', user);\n\n                fragment.appendChild(option);\n            }\n        });\n\n        if (!fromServer || (fromServer && !currentRenderedCount)) {\n            this.list.innerHTML = '';\n        }\n        this.list.appendChild(fragment);\n\n        currentRenderedCount = this.list.querySelectorAll('[data-item]').length;\n        if (!currentRenderedCount) {\n            this._renderListItemsEmpty();\n        }\n    }\n\n    _renderListItemsEmpty() {\n        const optionEmpty = this._getTemplate('listItemEmpty');\n        this.list.appendChild(optionEmpty);\n    }\n\n    _renderPhotoPreview(objects) {\n        const fragment = document.createDocumentFragment();\n\n        objects.forEach((object) => {\n            const photo = this._getTemplate('photoPreview', object.photo);\n\n            fragment.appendChild(photo);\n        });\n\n        this.photoPreviewContainer.innerHTML = '';\n        this.photoPreviewContainer.appendChild(fragment);\n    }\n\n    _renderSelectedItems() {\n        const selectedIds = this.selectedItems.map((item) => +item.getAttribute('data-id'));\n        let selectedObjects = [];\n\n        for (let i = 0; i < selectedIds.length; i++) {\n            const selectedId = selectedIds[i];\n            const selectedObject = this.config.presetItems.filter((obj) => {\n                return obj.id === selectedId;\n            })[0];\n\n            selectedObjects.push(selectedObject);\n        }\n\n        if (this.config.multi) {\n            const fragment = document.createDocumentFragment();\n            const addButton = this.selectedList.querySelectorAll('[data-add]')[0].cloneNode(true);\n            addButton.style.display = this.selectedItems.length ? 'inline-block' : 'none';\n\n            selectedObjects.forEach((object) => {\n                const option = this._getTemplate('selectedItem', object);\n\n                fragment.appendChild(option);\n            });\n\n            this.selectedList.innerHTML = '';\n            this.selectedList.appendChild(fragment);\n            this.selectedList.appendChild(addButton);\n        } else {\n            if (this.selectedItems.length > 0) {\n                const selectedId = +this.selectedItems[0].getAttribute('data-id');\n                const selectedObject = this.config.presetItems.filter((obj) => {\n                    return obj.id === selectedId;\n                })[0];\n\n                this.input.value = selectedObject.name;\n                this.input.setAttribute('readonly', 'readonly');\n            } else {\n                this.input.value = '';\n                this.input.removeAttribute('readonly');\n            }\n        }\n\n        if (!this.config.noPhotoPreview) {\n            this._renderPhotoPreview(selectedObjects);\n        }\n    }\n\n    _searchItems(value) {\n        if (!value) {\n            this._renderListItems(this.config.presetItems);\n        }\n\n        const items = this.config.presetItems;\n        const q = value.toLowerCase();\n\n        let itemsFiltered = items.filter((person, index) => {\n            const name = person.name.toLowerCase().split(' ');\n            let answer = false;\n\n            // split name for search only from begin of first name/last name\n            for (let i = 0; i < name.length; i++) {\n                const namePart = name[i];\n\n                const qRu2en = this._getOtherKeyboardLayout(q, 'ru2en');\n                const qEn2ru = this._getOtherKeyboardLayout(q, 'en2ru');\n                const qEnBad2ru = this._getOtherKeyboardLayout(q, 'enBad2ru');\n                const qRuBad2en2ru = this._getOtherKeyboardLayout(q, 'ruBad2en2ru');\n\n                answer = !namePart.indexOf(q) ||\n                         !namePart.indexOf(qRu2en) ||\n                         !namePart.indexOf(qEn2ru) ||\n                         !namePart.indexOf(qEnBad2ru) ||\n                         !namePart.indexOf(qRuBad2en2ru);\n\n                if (answer) {\n                    return answer;\n                }\n            }\n\n            return answer;\n        });\n\n        this._renderListItems(itemsFiltered);\n\n        if (!this.config.noServerSearch) {\n            this._searchOnServer(q);\n        }\n    }\n\n    _searchOnServer(q) {\n        const $this = this;\n        const params = `items=${encodeURIComponent(JSON.stringify(this.config.presetItems))}&q=${q}`;\n\n        if (this.xhr && this.xhr.readyState !== 4) {\n            this.xhr.abort();\n        }\n\n        this.xhr = new XMLHttpRequest();\n        this.xhr.open('POST', 'api.php', true);\n        this.xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        this.xhr.onload = function() {\n            if (this.status >= 200 && this.status < 400) {\n                const data = JSON.parse(this.response);\n\n                $this._renderListItems(data, true);\n            }\n        };\n        this.xhr.onerror = function(error) {\n            console.log(error)\n        };\n        this.xhr.send(params);\n\n        // todo can opera 12.16 support Promise?\n        // const data = new FormData();\n        // data.append('items', JSON.stringify(this.config.presetItems));\n        // data.append('q', q);\n        //\n        // fetch('api.php', {\n        //     method: 'POST',\n        //     body: data\n        // }).then((response) => response.json()).then((result) => {\n        //     console.log(result);\n        // }).catch((error) => console.log(error));\n    }\n\n    _selectItem(element) {\n        if (!element) {\n            return;\n        }\n\n        this.input.value = '';\n\n        if (!this.config.multi) {\n            this.selectedItems = [];\n        }\n\n        this.selectedItems.push(element);\n\n\n        this._renderContainer();\n    }\n\n    _removeItem(element) {\n        if (!element || !this.config.multi) {\n            return;\n        }\n\n        const userId = +element.parentElement.getAttribute('data-id');\n        this.selectedItems = this.selectedItems.filter(function(obj) {\n            return +obj.getAttribute('data-id') !== userId;\n        });\n\n        this.hideDropdown();\n        this._renderContainer();\n    }\n\n    hideDropdown() {\n        this.input.blur();\n        this._scrollListToTop();\n        this._unhighlightAll();\n\n        this.container.classList.remove(this.config.classNames.openState);\n        this.list.classList.remove(this.config.classNames.activeState);\n\n        if (this.config.multi) {\n            if (!this.selectedItems.length) {\n                this._showInput();\n            }\n\n            if (this.selectedItems.length && !this.input.value) {\n                this._showSelectedListAddButton();\n                this._hideInput();\n            }\n        }\n    }\n\n    showDropdown() {\n        this.input.focus();\n        this.container.classList.add(this.config.classNames.openState);\n        this.list.classList.add(this.config.classNames.activeState);\n\n        if (this.config.multi) {\n            this._hideSelectedListAddButton();\n            this._showInput();\n            this.input.focus();\n        }\n    }\n\n    _hideSelectedClearButton() {\n        const clearButton = this.inputContainer.querySelectorAll('[data-clear]')[0];\n        clearButton.style.display = 'none';\n    }\n\n    _showSelectedClearButton() {\n        const clearButton = this.inputContainer.querySelectorAll('[data-clear]')[0];\n        clearButton.style.display = 'block';\n    }\n\n    _hideSelectedListAddButton() {\n        const addButton = this.selectedList.querySelectorAll('[data-add]')[0].cloneNode(true);\n        addButton.style.display = 'none';\n    }\n\n    _showSelectedListAddButton() {\n        const addButton = this.selectedList.querySelectorAll('[data-add]')[0].cloneNode(true);\n        addButton.style.display = 'inline-block';\n    }\n\n    _hideInput() {\n        this.input.style.display = 'none';\n    }\n\n    _showInput() {\n        this.input.style.display = 'inline';\n    }\n}","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n"]}